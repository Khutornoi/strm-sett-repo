<templateSet group="JavaScript">
  <template name="cl" value="console.log($MODULE_VAR$)$END$" description="console.log()" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="&gt;&gt;" value="($ARGs$)=&gt;{&#10;    $END$&#10;}" description="()=&gt;{}" toReformat="true" toShortenFQNames="true">
    <variable name="ARGs" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="l&gt;&gt;" value="let $LET$ = ($ARGs$)=&gt;{&#10;    $END$&#10;};" description="let variable = ()=&gt;{}" toReformat="true" toShortenFQNames="true">
    <variable name="LET" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGs" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ir" value="import React, {Component} from 'react'&#10;$END$&#10;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rrr" value="import React, { Component } from 'react'&#10;&#10;class $MODULE_VAR$ extends Component {&#10;    state = {&#10;        &#10;    };&#10;    &#10;    render(){&#10;        return (&#10;            &lt;div className=''&gt;&#10;                $END$&#10;            &lt;/div&gt;&#10;        )&#10;    }&#10;&#10;}&#10;&#10;export default $MODULE_VAR$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="im" value="import { $MODULE_VAR$ } from '$MODULE$';$END$" description="Import from" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="imd" value="import $MODULE_VAR$ from '$MODULE$';$END$" description="Import default from" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rrfc" value="import React, { FC } from 'react'&#10;&#10;const $MODULE_VAR$: FC = () =&gt; {&#10;  return (&#10;    &lt;div &gt;&#10;      $END$&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;&#10;export default $MODULE_VAR$" description="React-Function-Component" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sss" value="const styles = StyleSheet.create({&#10;  $MODULE_VAR$: {&#10;    $END$&#10;  }&#10;});&#10;" description="Styles object" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ddd" value="const {$END$}=$MODULE_VAR$;&#10;" description="Destructurization" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="co" value="const $MODULE_VAR$ = $END$" description="const =" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rrrr" value="import React, { Component } from 'react'&#10;import { View, Text, StyleSheet } from 'react-native'&#10;&#10;export default class $MODULE_VAR$ extends Component {&#10;  render() {&#10;    return (&#10;      &lt;View style={styles.container}&gt;&#10;        &lt;Text&gt;$MODULE_VAR$&lt;/Text&gt;$END$&#10;      &lt;/View&gt;&#10;    )&#10;  }&#10;}&#10;const styles = StyleSheet.create({&#10;  container: {&#10;    flex: 1,&#10;    justifyContent: 'center',&#10;    alignItems: 'center',&#10;  }&#10;})" description="React Native Class Component" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="na" value="this.props.navigation.navigate(&quot;$MODULE_VAR$&quot;)     $END$" description="navigate to screen" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="imf" value="import firebase from &quot;react-native-firebase&quot;;$END$" description="import firebase" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ilf" value="isLoading: false" description="isLoading: false" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ilt" value="isLoading: true" description="isLoading: true" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="naf" value="()=&gt;this.props.navigation.navigate(&quot;$MODULE_VAR$&quot;)     $END$" description="()=&gt;navigate to screen" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="clm" value="console.log(`%c $MODULE_VAR$`, &quot;color: magenta;&quot;, $VAR$)$END$" description="console.log() magenta" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MODULE_VAR" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="clo" value="console.log(`%c $FNAME$-&gt;$MODULE_VAR$=&gt;`, &quot;color: orange&quot;, $VAR$)$END$" description="console.log() orange" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MODULE_VAR" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <variable name="FNAME" expression="complete()" defaultValue="jsMethodName()" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="clt" value="console.table($MODULE_VAR$)$END$" description="console.table" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="$$" value="${$MODULE_VAR$}$END$" description="${}" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="&gt;&gt;&gt;" value="($ARGs$)=&gt;(&#10;    $END$&#10;)" description="()=&gt;()" toReformat="true" toShortenFQNames="true">
    <variable name="ARGs" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="clll" value="console.log(`%c lifecycle: $MODULE_VAR$`, &quot;color: indigo;&quot;, $VAR$)$END$" description="console.log() lifecycle" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MODULE_VAR" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ed" value="export default $END$&#10;" description="Export default" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="mts" value="import { makeStyles } from '@material-ui/styles';&#10;import { Theme } from '@material-ui/core';&#10;&#10;export const useStyles = makeStyles((theme: Theme) =&gt; ({&#10;  $END$&#10;}));&#10;" description="Material-UI makeStyles" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rrfcs" value="import React, { FC } from 'react'&#10;import { useStyles } from './styles';&#10;&#10;const $MODULE_VAR$: FC = () =&gt; {&#10;    // Styling&#10;  const styles = useStyles();&#10;&#10;return (&#10;    &lt;div className={styles.$MODULE_VAR$} &gt;&#10;      $END$&#10;    &lt;/div&gt;&#10;  )&#10;}&#10;&#10;export default $MODULE_VAR$" description="React-Function-Component+useStyles" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ccc" value="className={styles.$MODULE_VAR$}" description="className={styles. }" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE_VAR" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="df" value="display: 'flex',&#10;flexDirection: '$DIRECTION$',&#10;width: '$WIDTH$',&#10;height: '$HEIGHT$',&#10;alignItems: 'center',&#10;justifyContent: 'center',$END$&#10;" description="display: 'flex'" toReformat="true" toShortenFQNames="true">
    <variable name="DIRECTION" expression="enum(&quot;row&quot;,&quot;column&quot;)" defaultValue="&quot;row&quot;" alwaysStopAt="true" />
    <variable name="WIDTH" expression="" defaultValue="&quot;100%&quot;" alwaysStopAt="true" />
    <variable name="HEIGHT" expression="" defaultValue="&quot;100%&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="clc" value="console.log(`%c $MODULE_VAR$`, &quot;color: cyan;&quot;, $VAR$)$END$" description="console.log() cyan" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MODULE_VAR" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cly" value="console.log(`%c $MODULE_VAR$`, &quot;color: yellow;&quot;, $VAR$)$END$" description="console.log() yellow" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MODULE_VAR" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rnfcs" value="import React, { FC } from 'react';&#10;import { View } from 'react-native';&#10;import { styles } from './styles';&#10;&#10;const $FILENAME_VAR$: FC = () =&gt; {&#10;&#10;return (&#10;    &lt;View style={styles.$CLASSNAME_VAR$} &gt;&#10;      $END$&#10;    &lt;/View&gt;&#10;  )&#10;}&#10;&#10;export default $FILENAME_VAR$" description="React-native-Function-Component+importStyles" toReformat="false" toShortenFQNames="true">
    <variable name="FILENAME_VAR" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME_VAR" expression="camelCase(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rns" value="import { StyleSheet } from 'react-native';&#10;&#10;export const styles = StyleSheet.create({&#10;  $COMPONENT$: {$DEF$},&#10;});&#10;" description="React-native-Styles" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="camelCase(clipboard())" defaultValue="" alwaysStopAt="true" />
    <variable name="DEF" expression="" defaultValue="&quot;flex: 1, alignItems: 'center', justifyContent: 'center'&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rnscs" value="import React from 'react';&#10;import { View } from 'react-native';&#10;import { NavigationStackScreenComponent } from 'react-navigation-stack';&#10;import { styles } from './styles';&#10;&#10;const $FILENAME_VAR$: NavigationStackScreenComponent = () =&gt; {&#10;&#10;return (&#10;    &lt;View style={styles.$CLASSNAME_VAR$} &gt;&#10;      $END$&#10;    &lt;/View&gt;&#10;  )&#10;}&#10;&#10;export default $FILENAME_VAR$" description="React-native-Screen-Component+importStyles" toReformat="false" toShortenFQNames="true">
    <variable name="FILENAME_VAR" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASSNAME_VAR" expression="camelCase(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>